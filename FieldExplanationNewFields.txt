# RE4_SMX_TOOL
# by: JADERLINK
# youtube.com/@JADERLINK
# github.com/JADERLINK
# Version V.1.1 (2025-07-06)

# Translate from Portuguese Brazil

# Arquivo destinado a explicar a função de cada campo;
# Não crie um arquivo .SMX com esse arquivo;
# Ao lado de cada campo, não podem ter comentários;

UseSMXID: uint8_t ModelNo; //ID do SMX

Mode: uint8_t Id; (enum MOVE_TYPE)
# MOVE_TYPE:
# 00: TYPE_NORMAL
# 01: TYPE_ROTATE
# 02: TYPE_SWING_ROT

OpacityHierarchy: uint8_t OtType; (enum OT_TYPES)
# OT_TYPES:
# 00: NORMAL
# 01: SORT
# 02: SMD_BEFORE
# 03: SMD_NORMAL
# 04: SMD_AFTER
# 05: EFFECT

FaceCulling: uint8_t CullMode; (enum CULL_MODE)
# CULL_MODE:
# 00: BACK
# 01: FRONT
# 02: NO_CULL

LightSwitch_00 ... LightSwitch_31: uint32_t LitSelectMask;

UnknownX0B UnknownX0A UnknownX09 AlphaHierarchy: uint32_t Flag; (enum SMX_FLAGS)
# SMX_FLAGS: // Preencha em AlphaHierarchy
# 00: NONE (sem flag)
# 01: SHADOW
# 02: VERTEX_COLOR
# 03: SHADOW, VERTEX_COLOR
# 04: CAST_ON
# 05: CAST_ON, SHADOW
# 06: CAST_ON, VERTEX_COLOR
# 07: CAST_ON, SHADOW, VERTEX_COLOR
# 08: NO_ALPHA
# 09: NO_ALPHA, SHADOW
# 0A: NO_ALPHA, VERTEX_COLOR
# 0B: NO_ALPHA, SHADOW, VERTEX_COLOR
# 0C: NO_ALPHA, CAST_ON
# 0D: NO_ALPHA, CAST_ON, SHADOW
# 0E: NO_ALPHA, CAST_ON, VERTEX_COLOR
# 0F: NO_ALPHA, CAST_ON, SHADOW, VERTEX_COLOR
# 10: IGNORE_POINT_LIGHTS
# 11: IGNORE_POINT_LIGHTS, SHADOW
# 12: IGNORE_POINT_LIGHTS, VERTEX_COLOR
# 13: IGNORE_POINT_LIGHTS, SHADOW, VERTEX_COLOR
# 14: IGNORE_POINT_LIGHTS, CAST_ON
# 15: IGNORE_POINT_LIGHTS, CAST_ON, SHADOW
# 16: IGNORE_POINT_LIGHTS, CAST_ON, VERTEX_COLOR
# 17: IGNORE_POINT_LIGHTS, CAST_ON, SHADOW, VERTEX_COLOR
# 18: IGNORE_POINT_LIGHTS, NO_ALPHA
# 19: IGNORE_POINT_LIGHTS, NO_ALPHA, SHADOW
# 1A: IGNORE_POINT_LIGHTS, NO_ALPHA, VERTEX_COLOR
# 1B: IGNORE_POINT_LIGHTS, NO_ALPHA, SHADOW, VERTEX_COLOR
# 1C: IGNORE_POINT_LIGHTS, NO_ALPHA, CAST_ON
# 1D: IGNORE_POINT_LIGHTS, NO_ALPHA, CAST_ON, SHADOW
# 1E: IGNORE_POINT_LIGHTS, NO_ALPHA, CAST_ON, VERTEX_COLOR
# 1F: IGNORE_POINT_LIGHTS, NO_ALPHA, CAST_ON, SHADOW, VERTEX_COLOR
# 20: IGNORE_FLASH_LIGHT
# 21: IGNORE_FLASH_LIGHT, SHADOW
# 22: IGNORE_FLASH_LIGHT, VERTEX_COLOR
# 23: IGNORE_FLASH_LIGHT, SHADOW, VERTEX_COLOR
# 24: IGNORE_FLASH_LIGHT, CAST_ON
# 25: IGNORE_FLASH_LIGHT, CAST_ON, SHADOW
# 26: IGNORE_FLASH_LIGHT, CAST_ON, VERTEX_COLOR
# 27: IGNORE_FLASH_LIGHT, CAST_ON, SHADOW, VERTEX_COLOR
# 28: IGNORE_FLASH_LIGHT, NO_ALPHA
# 29: IGNORE_FLASH_LIGHT, NO_ALPHA, SHADOW
# 2A: IGNORE_FLASH_LIGHT, NO_ALPHA, VERTEX_COLOR
# 2B: IGNORE_FLASH_LIGHT, NO_ALPHA, SHADOW, VERTEX_COLOR
# 2C: IGNORE_FLASH_LIGHT, NO_ALPHA, CAST_ON
# 2D: IGNORE_FLASH_LIGHT, NO_ALPHA, CAST_ON, SHADOW
# 2E: IGNORE_FLASH_LIGHT, NO_ALPHA, CAST_ON, VERTEX_COLOR
# 2F: IGNORE_FLASH_LIGHT, NO_ALPHA, CAST_ON, SHADOW, VERTEX_COLOR
# 30: IGNORE_FLASH_LIGHT, IGNORE_POINT_LIGHTS
# 31: IGNORE_FLASH_LIGHT, IGNORE_POINT_LIGHTS, SHADOW
# 32: IGNORE_FLASH_LIGHT, IGNORE_POINT_LIGHTS, VERTEX_COLOR
# 33: IGNORE_FLASH_LIGHT, IGNORE_POINT_LIGHTS, SHADOW, VERTEX_COLOR
# 34: IGNORE_FLASH_LIGHT, IGNORE_POINT_LIGHTS, CAST_ON
# 35: IGNORE_FLASH_LIGHT, IGNORE_POINT_LIGHTS, CAST_ON, SHADOW
# 36: IGNORE_FLASH_LIGHT, IGNORE_POINT_LIGHTS, CAST_ON, VERTEX_COLOR
# 37: IGNORE_FLASH_LIGHT, IGNORE_POINT_LIGHTS, CAST_ON, SHADOW, VERTEX_COLOR
# 38: IGNORE_FLASH_LIGHT, IGNORE_POINT_LIGHTS, NO_ALPHA
# 39: IGNORE_FLASH_LIGHT, IGNORE_POINT_LIGHTS, NO_ALPHA, SHADOW
# 3A: IGNORE_FLASH_LIGHT, IGNORE_POINT_LIGHTS, NO_ALPHA, VERTEX_COLOR
# 3B: IGNORE_FLASH_LIGHT, IGNORE_POINT_LIGHTS, NO_ALPHA, SHADOW, VERTEX_COLOR
# 3C: IGNORE_FLASH_LIGHT, IGNORE_POINT_LIGHTS, NO_ALPHA, CAST_ON
# 3D: IGNORE_FLASH_LIGHT, IGNORE_POINT_LIGHTS, NO_ALPHA, CAST_ON, SHADOW
# 3E: IGNORE_FLASH_LIGHT, IGNORE_POINT_LIGHTS, NO_ALPHA, CAST_ON, VERTEX_COLOR
# 3F: IGNORE_FLASH_LIGHT, IGNORE_POINT_LIGHTS, NO_ALPHA, CAST_ON, SHADOW, VERTEX_COLOR
# Isso são todas as combinações possíveis, números maiores que esses, estão ativando essas flags, e mais outras não utilizadas.

ColorRGB: GXColor MaterialColor; (struct GXColor) no alpha

ColorAlpha: (enum BLENDING_TYPES)

/* "union" fields here */

UnknownU84: GXColor SpecularColor; (struct GXColor + enum BLENDING_TYPES)

# BLENDING_TYPES:
# 00: NORMAL
# 01: ADD
# 02: ADD2
# 03: ADD3
# 04: NO_BLEND
# 05: LOCK_UNKNOWN_MODEL

TextureMovement_X: float TexU;
TextureMovement_Y: float TexV;

/* Mode:01 union:  FREE_ROTATE rotate */
RotationSpeed_X: Rot; (x) float
RotationSpeed_Y: Rot; (y) float
RotationSpeed_Z: Rot; (z) float
RotationSpeed_W: Rot; (w) float
Unknown_GTU: uint8_t m_Flag; (unknown type, can be 0 or 1)

/* Mode:02 union: TYPE_SWING_ROT swing_rotate (struct FREE_SWING) */
Swing0 ... SwingC: (float)
Swing0: m_StartZ
Swing1: m_RangeZ
Swing2: m_SpeedZ
Swing3: m_Time
Swing4: m_StartX
Swing5: m_RangeX
Swing6: m_SpeedX
Swing7: m_StartY
Swing8: m_RangeY
Swing9: m_SpeedY
SwingA: m_InitAngX
SwingB: m_InitAngY
SwingC: m_InitAngZ

